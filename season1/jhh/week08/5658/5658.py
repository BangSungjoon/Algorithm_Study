import sys
sys.stdin = open('input.txt')

def max_code(lst, k):
    sum_lst = []
    n = cnt = 0
    # n: 회전할 때, 첫 인덱스 자리 지정
    while True:
        if cnt > N // 4:
            break
        m = 0
        i = n   # 길이가 길어질수록 넘어가는 인덱스가 많아질 텐데 i = 0 을 못 받나?
        # m: 4변을 돌아
        while m < 4:
            code_str = ''
            j = 0
            # j: 한 변에 들어갈 개수만큼 돌아
            while j < N // 4:
                if i == N:
                    i = 0
                    code_str += lst[0][i]
                    j += 1
                    i += 1
                else:
                    code_str += lst[0][i]
                    j += 1
                    i += 1

            # 16진수로 변환
            sum_lst.append(int(code_str, 16))
            m += 1
        cnt += 1
        if n + N // 4 > N:
            n = n + N//4 - N
        else:
            n += N // 4 - 1 # 이게 틀렸나?ㅠ -> ㅇㅇ ㅜㅠ

    sum_lst = list(set(sum_lst))
    sum_lst.sort(reverse=True)
    return sum_lst[k-1]

T = int(input())
for tc in range(1, T+1):
    # 숫자의 개수 N과 크기 순서 K
    N, K = map(int, input().split())
    i_lst = list(input().split())
    print(f'#{tc} {max_code(i_lst, K)}')


#1 [3957, 3611, 2945, 2875, 2079, 1886, 1505, 952, 947, 503, 435]
#2 [62773, 55541, 55138, 45784, 36691, 34519, 34482, 30248, 28022, 27437, 25222, 22637, 21336, 13702, 11663, 10347]
#3 [1007898, 934218, 755958, 713748, 685691, 685338, 587281, 560993, 505999, 485304, 479655, 424840, 397742, 334454, 304977, 267431, 110145, 108391, 84597, 72420]
#4 [15443622, 14697683, 13888422, 13688900, 12216932, 11687546, 11083022, 10921543, 10897330, 9556192, 8070503, 8032720, 6972539, 6793501, 6585125, 5667473, 5062330, 4698710, 4510699, 4110954, 2451369, 1904132, 918605, 281918]
#5 [267032974, 245995744, 238738430, 235634130, 231889108, 230681241, 222372401, 220564801, 201238936, 192795224, 182189737, 177835531, 161013943, 160303997, 148944861, 148116003, 132361663, 131933581, 93143330, 68297495, 61718506, 51897261, 39375890, 36798010, 35854307, 25049819, 19018110, 12049701]



